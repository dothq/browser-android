name: Build Android APK

on:
  push:
    paths:
      - app/**
      - gradle/**
    branches:
      - nightly

jobs: 
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set variables
        run: |
          VER=$(cat app/src/main/java/co/dothq/browser/config/version.txt)
          echo "VERSION=$VER" >> $GITHUB_ENV
      - name: Echo version
        run: echo "${{ env.VERSION }}"
      - name: Build APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk 
  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set variables
        run: |
          VER=$(cat app/src/main/java/co/dothq/browser/config/version.txt)
          echo "VERSION=$VER" >> $GITHUB_ENV 
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk  
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOT_TOKEN }} 
        with:
          tag_name: v${{ env.VERSION }}-${{ github.run_number }} 
          release_name: Release v${{ env.VERSION }}-${{ github.run_number }} 
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: dot-${{ env.VERSION }}-${{ github.run_number }}-${{ github.ref }}-arm64.apk
          asset_content_type: application/zip
